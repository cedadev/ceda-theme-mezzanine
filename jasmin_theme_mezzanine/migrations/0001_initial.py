# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-09 12:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import mezzanine.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pages', '0003_auto_20150527_1555'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Page')),
                ('leader_text', models.TextField(blank=True, help_text=b'Add <br> for line breaks')),
                ('button_text', models.CharField(blank=True, help_text=b'Optional, if present a button with the link specified below will be in the slide', max_length=100)),
                ('button_link', models.CharField(blank=True, max_length=2000)),
                ('icon_box_layout', models.CharField(choices=[(b'TW', b'Two across'), (b'TH', b'Three across'), (b'TB', b'Three across boxes')], default=b'TH', max_length=2)),
            ],
            options={
                'ordering': ('_order',),
                'verbose_name': 'Home page',
                'verbose_name_plural': 'Home pages',
            },
            bases=('pages.page',),
        ),
        migrations.CreateModel(
            name='IconBox',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_order', mezzanine.core.fields.OrderField(null=True, verbose_name='Order')),
                ('icon', models.CharField(help_text=b'Enter the name of a font awesome icon, i.e. fa-eye. A list is available here http://fontawesome.io/', max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('content', mezzanine.core.fields.RichTextField()),
                ('link', models.CharField(blank=True, help_text=b'Optional, if provided clicking the box will go here.', max_length=2000)),
                ('homepage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boxes', to='jasmin_theme_mezzanine.HomePage')),
            ],
            options={
                'ordering': ('_order',),
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Page')),
            ],
            options={
                'ordering': ('_order',),
                'verbose_name': 'Portfolio',
                'verbose_name_plural': 'Portfolios',
            },
            bases=('pages.page',),
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Page')),
                ('content', mezzanine.core.fields.RichTextField(verbose_name='Content')),
                ('subtitle', models.CharField(blank=True, max_length=200)),
                ('featured_image', mezzanine.core.fields.FileField(blank=True, max_length=255, null=True, verbose_name='Featured Image')),
                ('href', models.CharField(blank=True, help_text=b'A link to the finished project (optional)', max_length=2000)),
            ],
            options={
                'ordering': ('_order',),
                'verbose_name': 'Portfolio item',
                'verbose_name_plural': 'Portfolio items',
            },
            bases=('pages.page', models.Model),
        ),
        migrations.CreateModel(
            name='PortfolioItemCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('slug', models.CharField(blank=True, help_text='Leave blank to have the URL auto-generated from the title.', max_length=2000, null=True, verbose_name='URL')),
                ('site', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='sites.Site')),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'Portfolio Item Category',
                'verbose_name_plural': 'Portfolio Item Categories',
            },
        ),
        migrations.CreateModel(
            name='PortfolioItemImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_order', mezzanine.core.fields.OrderField(null=True, verbose_name='Order')),
                ('file', mezzanine.core.fields.FileField(max_length=200, verbose_name='File')),
                ('alt_text', models.CharField(blank=True, max_length=200)),
                ('portfolioitem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='jasmin_theme_mezzanine.PortfolioItem')),
            ],
            options={
                'ordering': ('_order',),
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='SiteSectionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pages.Page')),
                ('content', mezzanine.core.fields.RichTextField(blank=True)),
            ],
            options={
                'ordering': ('_order',),
                'verbose_name': 'Site section',
                'verbose_name_plural': 'Site sections',
            },
            bases=('pages.page',),
        ),
        migrations.AddField(
            model_name='portfolioitem',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='portfolioitems', to='jasmin_theme_mezzanine.PortfolioItemCategory', verbose_name='Categories'),
        ),
    ]
